{"ast":null,"code":"import { createContext } from \"react\";\nimport { initialState } from '../App.jsx';\nexport const StateContext = /*#__PURE__*/createContext({\n  state: {},\n  dispatch: () => {}\n});\nexport function userAndViewReducer(state, action) {\n  switch (action.type) {\n    case 'SET_VIEW':\n      return {\n        ...state,\n        currentView: action.view\n      };\n    case 'LOGIN':\n    case 'REGISTER':\n      // return {\n      //   ...state,\n      //   user: action.user\n      // };\n      return action.user;\n    case 'LOGOUT':\n      return initialState;\n    default:\n      return state;\n  }\n}\nexport function notesReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_NOTE':\n      return [...state, action.newNote];\n    case 'DELETE_NOTE':\n      return state.filter(note => note.id !== action.id);\n    case 'EDIT_NOTE':\n      return state.map(note => {\n        if (note.id === action.noteItem.id) {\n          return action.noteItem;\n        } else {\n          return note;\n        }\n      });\n    case 'TOGGLE_NOTE':\n      return state.map(note => {\n        if (note.id === action.id) {\n          const isCompleted = !note.isCompleted;\n          return {\n            ...note,\n            isCompleted,\n            completedDate: isCompleted ? new Date().toLocaleString() : null\n          };\n        }\n        return note;\n      });\n    default:\n      return state;\n  }\n}\nexport function mockDBReducer(db, action) {\n  switch (action.type) {\n    case 'ADD_USER_TO_DB':\n      return [...db, action.user];\n    default:\n      return db;\n  }\n}","map":{"version":3,"names":["createContext","initialState","StateContext","state","dispatch","userAndViewReducer","action","type","currentView","view","user","notesReducer","newNote","filter","note","id","map","noteItem","isCompleted","completedDate","Date","toLocaleString","mockDBReducer","db"],"sources":["/Users/hezhihong/csc436/hw2/src/auxiliary/Reducer.jsx"],"sourcesContent":["import { createContext } from \"react\";\nimport { initialState } from '../App.jsx';\n\nexport const StateContext = createContext({\n  state: {},\n  dispatch: () => {}\n});\n\nexport function userAndViewReducer(state, action){\n  switch (action.type) {\n    case 'SET_VIEW':\n        return {\n            ...state,\n            currentView: action.view\n        };\n    case 'LOGIN':\n    case 'REGISTER':\n      // return {\n      //   ...state,\n      //   user: action.user\n      // };\n      return action.user\n    case 'LOGOUT':\n      return initialState;\n    \n    default:\n        return state;\n  }\n}\n\n\nexport function notesReducer(state, action) {\n  switch(action.type) {\n\n    case 'ADD_NOTE':\n      return [...state, action.newNote];\n\n    case 'DELETE_NOTE':\n      return state.filter(note => note.id !== action.id);\n\n    case 'EDIT_NOTE':\n      return state.map(note => {\n        if (note.id === action.noteItem.id) {\n          return action.noteItem;\n        } else {\n          return note;\n        }\n      });\n\n      case 'TOGGLE_NOTE':\n            return state.map(note => {\n                if (note.id === action.id) {\n                    const isCompleted = !note.isCompleted;\n                    return {\n                        ...note,\n                        isCompleted,\n                        completedDate: isCompleted ? new Date().toLocaleString() : null\n                    };\n                }\n                return note;\n            });\n\n    default:\n      return state;\n\n    }\n  }\n\nexport function mockDBReducer(db, action) {\n  switch(action.type) {\n      case 'ADD_USER_TO_DB':\n          return [...db, action.user];\n      default:\n          return db;\n  }\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,YAAY,QAAQ,YAAY;AAEzC,OAAO,MAAMC,YAAY,gBAAGF,aAAa,CAAC;EACxCG,KAAK,EAAE,CAAC,CAAC;EACTC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,SAASC,kBAAkBA,CAACF,KAAK,EAAEG,MAAM,EAAC;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACX,OAAO;QACH,GAAGJ,KAAK;QACRK,WAAW,EAAEF,MAAM,CAACG;MACxB,CAAC;IACL,KAAK,OAAO;IACZ,KAAK,UAAU;MACb;MACA;MACA;MACA;MACA,OAAOH,MAAM,CAACI,IAAI;IACpB,KAAK,QAAQ;MACX,OAAOT,YAAY;IAErB;MACI,OAAOE,KAAK;EAClB;AACF;AAGA,OAAO,SAASQ,YAAYA,CAACR,KAAK,EAAEG,MAAM,EAAE;EAC1C,QAAOA,MAAM,CAACC,IAAI;IAEhB,KAAK,UAAU;MACb,OAAO,CAAC,GAAGJ,KAAK,EAAEG,MAAM,CAACM,OAAO,CAAC;IAEnC,KAAK,aAAa;MAChB,OAAOT,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACS,EAAE,CAAC;IAEpD,KAAK,WAAW;MACd,OAAOZ,KAAK,CAACa,GAAG,CAACF,IAAI,IAAI;QACvB,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACW,QAAQ,CAACF,EAAE,EAAE;UAClC,OAAOT,MAAM,CAACW,QAAQ;QACxB,CAAC,MAAM;UACL,OAAOH,IAAI;QACb;MACF,CAAC,CAAC;IAEF,KAAK,aAAa;MACZ,OAAOX,KAAK,CAACa,GAAG,CAACF,IAAI,IAAI;QACrB,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACS,EAAE,EAAE;UACvB,MAAMG,WAAW,GAAG,CAACJ,IAAI,CAACI,WAAW;UACrC,OAAO;YACH,GAAGJ,IAAI;YACPI,WAAW;YACXC,aAAa,EAAED,WAAW,GAAG,IAAIE,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,GAAG;UAC/D,CAAC;QACL;QACA,OAAOP,IAAI;MACf,CAAC,CAAC;IAEV;MACE,OAAOX,KAAK;EAEd;AACF;AAEF,OAAO,SAASmB,aAAaA,CAACC,EAAE,EAAEjB,MAAM,EAAE;EACxC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,gBAAgB;MACjB,OAAO,CAAC,GAAGgB,EAAE,EAAEjB,MAAM,CAACI,IAAI,CAAC;IAC/B;MACI,OAAOa,EAAE;EACjB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}