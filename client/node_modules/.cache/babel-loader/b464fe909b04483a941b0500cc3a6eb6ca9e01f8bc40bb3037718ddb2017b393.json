{"ast":null,"code":"var _jsxFileName = \"C:\\\\class\\\\CSC436\\\\week9\\\\lab5\\\\client\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../auxiliary/Context\";\nimport { setView, registerUser, logoutUser } from \"../auxiliary/Action\";\nimport '../extraStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const {\n    dispatch\n  } = useContext(StateContext);\n  const [user, setUser] = useState({\n    name: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n\n  //1. Create hooks, build front-end and back-end routes, define routes and methods, \n  //and provide parsers for username, password, and second confirmation password when passed to the backend\n  const [response, register] = useResource((username, password, passwordConfirmation) => ({\n    url: \"/auth/register\",\n    method: \"post\",\n    data: {\n      username,\n      password,\n      passwordConfirmation\n    }\n  }));\n\n  // 3.Obtain the JSON parsing body passed from the backend, obtain the fields in the data, \n  // either deconstruct the data and pass it to dispatch while saving the global variable state in useContext, or pop up an error message\n  useEffect(() => {\n    if (response && response.isLoading === false) {\n      // check we get error or data\n      if (response.error) {\n        // if we encouter error, print it out to the console and alert user\n        console.error(response.error);\n        if (response.error.data.error.includes('duplicate key error')) {\n          window.alert('This username is already taken');\n        }\n        //Usually is the two password entries do not match\n        else window.alert(response.error.data.error);\n      } else if (response.data) {\n        // taclke the situation of register successfully\n        console.log(\"Registered:\", response.data);\n        window.alert(\"sign up successfully!\");\n        dispatch(registerUser(response.data.username));\n        //By creating a logoutUser action or a similar action, this action will clear the user status.\n        dispatch(logoutUser());\n        dispatch(setView('login'));\n      }\n    }\n  }, [response, dispatch]);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  //2. Obtain the username and password entered by the user from the input box and pass them to the backend\n  function handleRegister(event) {\n    event.preventDefault();\n    register(user.name, user.password, user.repeatPassword);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RegisterPage-form\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginPage-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"name\",\n          value: user.name,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"password\",\n          type: \"password\",\n          value: user.password,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"repeatPassword\",\n          type: \"Password\",\n          value: user.repeatPassword,\n          placeholder: \"Repeat Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginPage-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerPage-submitBtn\",\n          type: \"submit\",\n          disabled: !user.name || !user.password,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerPage-returnBtn\",\n          type: \"button\",\n          onClick: () => dispatch(setView('login')),\n          children: \"Return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n_s(RegisterPage, \"0vXQBbfDjORfDTxoiLOBuh2wkQ8=\", false, function () {\n  return [useResource];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useResource","StateContext","setView","registerUser","logoutUser","jsxDEV","_jsxDEV","RegisterPage","_s","dispatch","user","setUser","name","password","repeatPassword","response","register","username","passwordConfirmation","url","method","data","isLoading","error","console","includes","window","alert","log","handleChange","event","value","target","prevValue","handleRegister","preventDefault","className","children","onSubmit","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/class/CSC436/week9/lab5/client/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../auxiliary/Context\"; \nimport { setView, registerUser, logoutUser} from \"../auxiliary/Action\"; \nimport '../extraStyles.css'\n\nexport default function RegisterPage() {\n\n    const { dispatch } = useContext(StateContext);\n\n    const [user, setUser] = useState({\n      name: \"\",\n      password: \"\",\n      repeatPassword: \"\"\n    });\n\n    //1. Create hooks, build front-end and back-end routes, define routes and methods, \n    //and provide parsers for username, password, and second confirmation password when passed to the backend\n    const [response, register] = useResource((username, password, passwordConfirmation) => ({\n      url: \"/auth/register\",\n      method: \"post\",\n      data: { username, password, passwordConfirmation },\n    }));\n\n    // 3.Obtain the JSON parsing body passed from the backend, obtain the fields in the data, \n    // either deconstruct the data and pass it to dispatch while saving the global variable state in useContext, or pop up an error message\n    useEffect(() => {\n      if(response && response.isLoading === false){\n        // check we get error or data\n        if (response.error) {\n          // if we encouter error, print it out to the console and alert user\n          console.error(response.error);\n          if (response.error.data.error.includes('duplicate key error')) {\n            window.alert('This username is already taken');\n          }\n          //Usually is the two password entries do not match\n          else window.alert(response.error.data.error);\n\n        } else if (response.data) {\n          // taclke the situation of register successfully\n          console.log(\"Registered:\", response.data);\n          window.alert(\"sign up successfully!\");\n          \n          dispatch(registerUser(response.data.username));\n          //By creating a logoutUser action or a similar action, this action will clear the user status.\n          dispatch(logoutUser());\n          dispatch(setView('login'));\n        }\n      }\n      \n    }, [response, dispatch]);\n\n\n    function handleChange(event) {\n      const { name, value } = event.target;\n  \n      setUser(prevValue => {\n        return {\n          ...prevValue,\n          [name]: value\n        };\n      });\n    }\n\n    //2. Obtain the username and password entered by the user from the input box and pass them to the backend\n    function handleRegister(event) {\n      event.preventDefault();\n\n      register(user.name, user.password, user.repeatPassword);\n    \n    }\n  \n    return (\n      <div className=\"loginPage-container\">\n        <form className=\"RegisterPage-form\" onSubmit={handleRegister}>\n          <div className=\"loginPage-input-container\">\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"name\"\n              value={user.name}\n              placeholder=\"Username\"\n            />\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"password\"\n              type=\"password\"\n              value={user.password}\n              placeholder=\"Password\"\n            />\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"repeatPassword\"\n              type=\"Password\"\n              value={user.repeatPassword}\n              placeholder=\"Repeat Password\"\n            />\n          </div>\n          <div className=\"loginPage-button-container\">\n            <button \n                className=\"registerPage-submitBtn\" \n                type=\"submit\" \n                disabled={!user.name || !user.password}\n            >\n                Sign Up\n            </button>\n            <button \n                className=\"registerPage-returnBtn\" \n                type=\"button\" \n                onClick={() => dispatch(setView('login'))}\n            >\n                Return\n            </button>\n          </div>         \n        </form>\n\n        \n      </div>\n    );\n      \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}