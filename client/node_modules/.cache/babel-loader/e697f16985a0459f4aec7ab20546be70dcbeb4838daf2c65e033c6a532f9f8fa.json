{"ast":null,"code":"var _jsxFileName = \"C:\\\\class\\\\CSC436\\\\week9\\\\lab5\\\\client\\\\src\\\\pages\\\\HomePage.jsx\";\nimport React from \"react\";\n// import React, {useContext} from \"react\"; \nimport CreateArea from \"../components/CreateArea\";\nimport Note from \"../components/Note\";\n// import { StateContext } from \"../auxiliary/Context\"; \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage(props) {\n  //We need to deconstruct the user object to confirm who the current logged in user is\n  // const { state } = useContext(StateContext);\n  // const { user } = state;\n\n  const {\n    notes,\n    addNote,\n    deleteNote,\n    editNote,\n    toggleNote\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), notes\n    //Use the filter function to ensure that currently logged in users can only see their own posts\n    // .filter((noteItem) => noteItem.userEmail === user.name)\n    .map(noteItem => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        id: noteItem.id,\n        title: noteItem.title,\n        content: noteItem.content,\n        createdDate: noteItem.createdDate,\n        isCompleted: noteItem.isCompleted,\n        completedDate: noteItem.completedDate,\n        onDelete: deleteNote,\n        onEdit: editNote,\n        onToggle: toggleNote\n      }, noteItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","CreateArea","Note","jsxDEV","_jsxDEV","HomePage","props","notes","addNote","deleteNote","editNote","toggleNote","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","noteItem","id","title","content","createdDate","isCompleted","completedDate","onDelete","onEdit","onToggle","_c","$RefreshReg$"],"sources":["C:/class/CSC436/week9/lab5/client/src/pages/HomePage.jsx"],"sourcesContent":["import React from \"react\"; \n// import React, {useContext} from \"react\"; \nimport CreateArea from \"../components/CreateArea\";\nimport Note from \"../components/Note\";\n// import { StateContext } from \"../auxiliary/Context\"; \n\nfunction HomePage(props) {\n\n  //We need to deconstruct the user object to confirm who the current logged in user is\n  // const { state } = useContext(StateContext);\n  // const { user } = state;\n\n  const { notes, addNote, deleteNote, editNote, toggleNote } = props;\n\n  return (\n    <div>\n      <CreateArea onAdd={addNote} />\n      {notes\n      //Use the filter function to ensure that currently logged in users can only see their own posts\n      // .filter((noteItem) => noteItem.userEmail === user.name)\n      .map((noteItem) => {\n        return (\n          <Note\n            key={noteItem.id}\n            id={noteItem.id}\n            title={noteItem.title}\n            content={noteItem.content}\n            createdDate={noteItem.createdDate}\n            isCompleted={noteItem.isCompleted}\n            completedDate={noteItem.completedDate}\n            onDelete={deleteNote}\n            onEdit={editNote}\n            onToggle={toggleNote}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAACC,KAAK,EAAE;EAEvB;EACA;EACA;;EAEA,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGL,KAAK;EAElE,oBACEF,OAAA;IAAAQ,QAAA,gBACER,OAAA,CAACH,UAAU;MAACY,KAAK,EAAEL;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7BV;IACD;IACA;IAAA,CACCW,GAAG,CAAEC,QAAQ,IAAK;MACjB,oBACEf,OAAA,CAACF,IAAI;QAEHkB,EAAE,EAAED,QAAQ,CAACC,EAAG;QAChBC,KAAK,EAAEF,QAAQ,CAACE,KAAM;QACtBC,OAAO,EAAEH,QAAQ,CAACG,OAAQ;QAC1BC,WAAW,EAAEJ,QAAQ,CAACI,WAAY;QAClCC,WAAW,EAAEL,QAAQ,CAACK,WAAY;QAClCC,aAAa,EAAEN,QAAQ,CAACM,aAAc;QACtCC,QAAQ,EAAEjB,UAAW;QACrBkB,MAAM,EAAEjB,QAAS;QACjBkB,QAAQ,EAAEjB;MAAW,GAThBQ,QAAQ,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjB,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACY,EAAA,GAhCQxB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}