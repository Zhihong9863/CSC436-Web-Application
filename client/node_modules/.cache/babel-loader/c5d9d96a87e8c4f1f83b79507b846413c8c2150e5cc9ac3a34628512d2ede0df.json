{"ast":null,"code":"var _jsxFileName = \"C:\\\\class\\\\CSC436\\\\week5\\\\hw3\\\\client\\\\src\\\\pages\\\\RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../auxiliary/Context\";\nimport { setView, registerUser, logoutUser } from \"../auxiliary/Action\";\nimport { addUserToDB } from \"../auxiliary/Action\";\nimport '../extraStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = React.useContext(StateContext);\n  const [user, setUser] = useState({\n    name: \"\",\n    password: \"\",\n    repeatPassword: \"\"\n  });\n  const [response, register] = useResource((username, password) => ({\n    url: \"/users\",\n    method: \"post\",\n    data: {\n      username,\n      password\n    }\n  }));\n  useEffect(() => {\n    if (response && response.data) {\n      dispatch(registerUser(response.data.username));\n      dispatch(setView('login'));\n    }\n  }, [response, dispatch]);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n\n  //Send registration requests to the backend.\n  //Provide feedback to users based on the response.\n  //If registration is successful, update the status of the front-end and navigate to the login page or directly log in to the user\n  function handleRegister(event) {\n    event.preventDefault();\n\n    // check whether password is match\n    if (user.password !== user.repeatPassword) {\n      window.alert(\"The passwords entered twice do not match. Please re-enter!\");\n      return;\n    }\n\n    // // check whether user has existed\n    // const existingUser = mockDB.find(dbUser => dbUser.name === user.name);\n\n    // if(existingUser) {\n    //     window.alert(\"The username already exists!\");\n    //     return;\n    // }\n\n    // Send registration request to the backend\n    register({\n      username: user.username,\n      password: user.password\n    }).catch(error => {\n      // Handle errors here, like user already exists\n      if (error.response && error.response.status === 409) {\n        alert(\"The username already exists!\");\n      } else {\n        // Handle other types of errors (like network error, server error etc.)\n        alert(\"An error occurred. Please try again later.\");\n      }\n    });\n\n    // dispatch(registerUser(user.name));\n\n    //By creating a logoutUser action or a similar action, this action will clear the user status.\n    dispatch(logoutUser());\n    dispatch(setView('login'));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"RegisterPage-form\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginPage-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"name\",\n          value: user.name,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"password\",\n          type: \"password\",\n          value: user.password,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPage-input\",\n          onChange: handleChange,\n          name: \"repeatPassword\",\n          type: \"Password\",\n          value: user.repeatPassword,\n          placeholder: \"Repeat Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginPage-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerPage-submitBtn\",\n          type: \"submit\",\n          disabled: !user.name || !user.password,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n_s(RegisterPage, \"7UEr7h6D4LvvIj18otW4QtwhHDc=\", false, function () {\n  return [useResource];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useResource","StateContext","setView","registerUser","logoutUser","addUserToDB","jsxDEV","_jsxDEV","RegisterPage","_s","state","dispatch","useContext","user","setUser","name","password","repeatPassword","response","register","username","url","method","data","useEffect","handleChange","event","value","target","prevValue","handleRegister","preventDefault","window","alert","catch","error","status","className","children","onSubmit","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/class/CSC436/week5/hw3/client/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useResource } from \"react-request-hook\";\nimport { StateContext } from \"../auxiliary/Context\"; \nimport { setView, registerUser, logoutUser} from \"../auxiliary/Action\"; \nimport { addUserToDB } from \"../auxiliary/Action\";\nimport '../extraStyles.css'\n\nexport default function RegisterPage() {\n\n    const { state, dispatch } = React.useContext(StateContext);\n\n    const [user, setUser] = useState({\n        name: \"\",\n        password: \"\",\n        repeatPassword: \"\"\n      });\n\n    const [response, register] = useResource((username, password) => ({\n      url: \"/users\",\n      method: \"post\",\n      data: { username, password },\n    }));\n\n    useEffect(() => {\n      if (response && response.data) {\n        dispatch(registerUser(response.data.username));\n        dispatch(setView('login'));\n      }\n    }, [response, dispatch]);\n    \n    function handleChange(event) {\n      const { name, value } = event.target;\n  \n      setUser(prevValue => {\n        return {\n          ...prevValue,\n          [name]: value\n        };\n      });\n    }\n\n    //Send registration requests to the backend.\n    //Provide feedback to users based on the response.\n    //If registration is successful, update the status of the front-end and navigate to the login page or directly log in to the user\n    function handleRegister(event) {\n      event.preventDefault();\n\n      // check whether password is match\n      if (user.password !== user.repeatPassword) {\n          window.alert(\"The passwords entered twice do not match. Please re-enter!\");\n          return;\n      }\n\n      // // check whether user has existed\n      // const existingUser = mockDB.find(dbUser => dbUser.name === user.name);\n      \n      // if(existingUser) {\n      //     window.alert(\"The username already exists!\");\n      //     return;\n      // }\n\n      // Send registration request to the backend\n      register({ username: user.username, password: user.password })\n        .catch((error) => {\n        // Handle errors here, like user already exists\n        if (error.response && error.response.status === 409) {\n            alert(\"The username already exists!\");\n        } else {\n            // Handle other types of errors (like network error, server error etc.)\n            alert(\"An error occurred. Please try again later.\");\n        }\n      });\n\n      // dispatch(registerUser(user.name));\n\n      //By creating a logoutUser action or a similar action, this action will clear the user status.\n      dispatch(logoutUser());   \n      dispatch(setView('login'));\n    }\n  \n    return (\n      <div className=\"loginPage-container\">\n        <form className=\"RegisterPage-form\" onSubmit={handleRegister}>\n          <div className=\"loginPage-input-container\">\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"name\"\n              value={user.name}\n              placeholder=\"Username\"\n            />\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"password\"\n              type=\"password\"\n              value={user.password}\n              placeholder=\"Password\"\n            />\n            <input\n              className=\"loginPage-input\"\n              onChange={handleChange}\n              name=\"repeatPassword\"\n              type=\"Password\"\n              value={user.repeatPassword}\n              placeholder=\"Repeat Password\"\n            />\n          </div>\n          <div className=\"loginPage-button-container\">\n            <button \n                className=\"registerPage-submitBtn\" \n                type=\"submit\" \n                disabled={!user.name || !user.password}\n            >\n                Sign Up\n            </button>\n          </div>         \n        </form>\n\n        \n      </div>\n    );\n      \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}